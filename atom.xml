<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DaffodilFlower&#39;s blog</title>
  
  <subtitle>水仙花&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://daffodilflower.github.io/"/>
  <updated>2020-03-21T14:43:50.454Z</updated>
  <id>https://daffodilflower.github.io/</id>
  
  <author>
    <name>DaffodilFlower</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode 21 Merge Two Sorted Lists</title>
    <link href="https://daffodilflower.github.io/leetcode-21/"/>
    <id>https://daffodilflower.github.io/leetcode-21/</id>
    <published>2020-03-21T14:30:23.000Z</published>
    <updated>2020-03-21T14:43:50.454Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;这是一道easy题&lt;/p&gt;
&lt;h2 id=&quot;要求&quot;&gt;&lt;a href=&quot;#要求&quot; class=&quot;headerlink&quot; title=&quot;要求&quot;&gt;&lt;/a&gt;要求&lt;/h2&gt;&lt;p&gt;Merge two sorted linked lists and return it as a new
        
      
    
    </summary>
    
      <category term="面试" scheme="https://daffodilflower.github.io/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
      <category term="面试" scheme="https://daffodilflower.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="LeetCode" scheme="https://daffodilflower.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Conversational AI（5）：Multi-Step Reasoning on KB</title>
    <link href="https://daffodilflower.github.io/conversational-ai-5/"/>
    <id>https://daffodilflower.github.io/conversational-ai-5/</id>
    <published>2020-02-15T09:59:07.000Z</published>
    <updated>2020-02-15T15:18:36.335Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;KB-QA is performed in two steps: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(1) semantic parsing translates a question into a KB query &lt;/li&gt;
&lt;li&gt;(2) KBR traverses
        
      
    
    </summary>
    
      <category term="Conversational AI" scheme="https://daffodilflower.github.io/categories/Conversational-AI/"/>
    
    
      <category term="Knowledge Graph Reasoning" scheme="https://daffodilflower.github.io/tags/Knowledge-Graph-Reasoning/"/>
    
  </entry>
  
  <entry>
    <title>Conversational AI（4）：Sematic Parsing and Embedding-based methods for KBQA</title>
    <link href="https://daffodilflower.github.io/conversational-ai-4/"/>
    <id>https://daffodilflower.github.io/conversational-ai-4/</id>
    <published>2020-02-15T07:57:44.000Z</published>
    <updated>2020-02-15T10:35:56.551Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;KB-和-KG&quot;&gt;&lt;a href=&quot;#KB-和-KG&quot; class=&quot;headerlink&quot; title=&quot;KB 和 KG&quot;&gt;&lt;/a&gt;KB 和 KG&lt;/h2&gt;&lt;p&gt;Knowledge Base（KB）Organizing the world’s facts
        
      
    
    </summary>
    
      <category term="Conversational AI" scheme="https://daffodilflower.github.io/categories/Conversational-AI/"/>
    
    
      <category term="QA" scheme="https://daffodilflower.github.io/tags/QA/"/>
    
      <category term="KBQA" scheme="https://daffodilflower.github.io/tags/KBQA/"/>
    
  </entry>
  
  <entry>
    <title>Conversational AI（3）：Conversational QA 概述</title>
    <link href="https://daffodilflower.github.io/conversational-ai-3/"/>
    <id>https://daffodilflower.github.io/conversational-ai-3/</id>
    <published>2020-02-15T03:49:59.000Z</published>
    <updated>2020-02-15T10:24:16.243Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在 《Conversational AI（1）：概述》中提到了，Conversational AI 的分类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;QA bots&lt;/li&gt;
&lt;li&gt;Task-oriented bots，通常使用模块化系统实现，bot
        
      
    
    </summary>
    
      <category term="Conversational AI" scheme="https://daffodilflower.github.io/categories/Conversational-AI/"/>
    
    
      <category term="QA" scheme="https://daffodilflower.github.io/tags/QA/"/>
    
      <category term="KBQA" scheme="https://daffodilflower.github.io/tags/KBQA/"/>
    
      <category term="TextQA" scheme="https://daffodilflower.github.io/tags/TextQA/"/>
    
  </entry>
  
  <entry>
    <title>gdb和pdb常用命令</title>
    <link href="https://daffodilflower.github.io/gdb-pdb/"/>
    <id>https://daffodilflower.github.io/gdb-pdb/</id>
    <published>2020-02-15T03:36:15.000Z</published>
    <updated>2020-02-15T03:39:37.719Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;常用的gdb命令&quot;&gt;&lt;a href=&quot;#常用的gdb命令&quot; class=&quot;headerlink&quot; title=&quot;常用的gdb命令&quot;&gt;&lt;/a&gt;常用的gdb命令&lt;/h2&gt;&lt;p&gt;gdb 是 C/C++ 的调试工具&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;gdb.png&quot;
        
      
    
    </summary>
    
      <category term="调试" scheme="https://daffodilflower.github.io/categories/%E8%B0%83%E8%AF%95/"/>
    
    
      <category term="Python" scheme="https://daffodilflower.github.io/tags/Python/"/>
    
      <category term="C" scheme="https://daffodilflower.github.io/tags/C/"/>
    
      <category term="C++" scheme="https://daffodilflower.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>Reinforcement Learning（4）：</title>
    <link href="https://daffodilflower.github.io/rl-4/"/>
    <id>https://daffodilflower.github.io/rl-4/</id>
    <published>2020-02-10T07:31:41.000Z</published>
    <updated>2020-02-10T08:35:08.171Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Reinforcement Learning（3）：Policy Gradient</title>
    <link href="https://daffodilflower.github.io/rl-3/"/>
    <id>https://daffodilflower.github.io/rl-3/</id>
    <published>2020-02-10T07:31:39.000Z</published>
    <updated>2020-02-10T09:13:45.789Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;前一篇文章讲了基础算法中的基于 value function 的方法。&lt;/p&gt;
&lt;p&gt;本文介绍另外一种算法，它试图直接优化 policy $\pi(s; \theta)$（ $\theta \in R^d$ 是参数，$\pi$ &lt;strong&gt;通常是 actions
        
      
    
    </summary>
    
      <category term="Reinforcement Learning" scheme="https://daffodilflower.github.io/categories/Reinforcement-Learning/"/>
    
    
      <category term="Reinforcement Learning" scheme="https://daffodilflower.github.io/tags/Reinforcement-Learning/"/>
    
      <category term="Policy Gradient" scheme="https://daffodilflower.github.io/tags/Policy-Gradient/"/>
    
  </entry>
  
  <entry>
    <title>Reinforcement Learning（2）：Q-leanring</title>
    <link href="https://daffodilflower.github.io/rl-2/"/>
    <id>https://daffodilflower.github.io/rl-2/</id>
    <published>2020-02-10T07:29:45.000Z</published>
    <updated>2020-02-10T08:41:32.419Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;Q-learning&quot;&gt;&lt;a href=&quot;#Q-learning&quot; class=&quot;headerlink&quot; title=&quot;Q-learning&quot;&gt;&lt;/a&gt;Q-learning&lt;/h2&gt;&lt;p&gt;Q-learning 基于这个观察：如果 optimal
        
      
    
    </summary>
    
      <category term="Reinforcement Learning" scheme="https://daffodilflower.github.io/categories/Reinforcement-Learning/"/>
    
    
      <category term="Reinforcement Learning" scheme="https://daffodilflower.github.io/tags/Reinforcement-Learning/"/>
    
      <category term="Q-leanring" scheme="https://daffodilflower.github.io/tags/Q-leanring/"/>
    
  </entry>
  
  <entry>
    <title>Reinforcement Learning（1）：基础</title>
    <link href="https://daffodilflower.github.io/rl-1/"/>
    <id>https://daffodilflower.github.io/rl-1/</id>
    <published>2020-02-10T07:28:17.000Z</published>
    <updated>2020-02-10T08:30:12.541Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Reinforcement learning（RL）是一种 learning paradigm ，一个智能的agent 通过与最开始不了解的 environment 交互并学习作出最优决策。&lt;/p&gt;
&lt;p&gt;与supervised learning 相比，RL
        
      
    
    </summary>
    
      <category term="Reinforcement Learning" scheme="https://daffodilflower.github.io/categories/Reinforcement-Learning/"/>
    
    
      <category term="Reinforcement Learning" scheme="https://daffodilflower.github.io/tags/Reinforcement-Learning/"/>
    
  </entry>
  
  <entry>
    <title>Conversational AI（1）：概述</title>
    <link href="https://daffodilflower.github.io/conversational-ai-1/"/>
    <id>https://daffodilflower.github.io/conversational-ai-1/</id>
    <published>2020-02-09T09:07:32.000Z</published>
    <updated>2020-02-15T09:58:04.514Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;开发一个不仅能模拟人类对话也可以回答问题（从电影明星的新闻到爱因斯坦相对论），还能完成复杂任务（旅行计划）的conversational AI，是长久以来 AI 领域的一个目标。&lt;/p&gt;
&lt;p&gt;Conversational AI 和 Dialogue systems
        
      
    
    </summary>
    
      <category term="Conversational AI" scheme="https://daffodilflower.github.io/categories/Conversational-AI/"/>
    
    
      <category term="Chatbot" scheme="https://daffodilflower.github.io/tags/Chatbot/"/>
    
      <category term="QA" scheme="https://daffodilflower.github.io/tags/QA/"/>
    
  </entry>
  
  <entry>
    <title>Conversational AI（2）：Approaches的变迁</title>
    <link href="https://daffodilflower.github.io/conversational-ai-2/"/>
    <id>https://daffodilflower.github.io/conversational-ai-2/</id>
    <published>2020-02-08T10:57:08.000Z</published>
    <updated>2020-02-15T09:58:11.334Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Neural approaches 正在改变NLP与信息检索领域， 而 symbolic approaches 已经统治了这两个领域很多年。&lt;/p&gt;
&lt;p&gt;NLP applications
        
      
    
    </summary>
    
      <category term="Conversational AI" scheme="https://daffodilflower.github.io/categories/Conversational-AI/"/>
    
    
      <category term="Chatbot" scheme="https://daffodilflower.github.io/tags/Chatbot/"/>
    
      <category term="QA" scheme="https://daffodilflower.github.io/tags/QA/"/>
    
  </entry>
  
  <entry>
    <title>NLP中的Attention（1）</title>
    <link href="https://daffodilflower.github.io/attention-1/"/>
    <id>https://daffodilflower.github.io/attention-1/</id>
    <published>2020-02-07T02:48:02.000Z</published>
    <updated>2020-02-07T08:04:30.243Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;传统的seq2seq&quot;&gt;&lt;a href=&quot;#传统的seq2seq&quot; class=&quot;headerlink&quot; title=&quot;传统的seq2seq&quot;&gt;&lt;/a&gt;传统的seq2seq&lt;/h2&gt;&lt;p&gt;传统 seq2seq 模型的decode阶段，把source
        
      
    
    </summary>
    
      <category term="Attention" scheme="https://daffodilflower.github.io/categories/Attention/"/>
    
    
      <category term="Attention" scheme="https://daffodilflower.github.io/tags/Attention/"/>
    
      <category term="Seq2seq" scheme="https://daffodilflower.github.io/tags/Seq2seq/"/>
    
  </entry>
  
  <entry>
    <title>Recall@k是什么</title>
    <link href="https://daffodilflower.github.io/recall-at-k/"/>
    <id>https://daffodilflower.github.io/recall-at-k/</id>
    <published>2020-02-06T14:30:24.000Z</published>
    <updated>2020-02-07T02:41:32.396Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;通常情况下，用户评判一个chatbot或者QA系统的性能是否理想时，都会将该系统是否准确地完成了用户的任务作为首要的参考条件，例如，在给定的对话中是否解决客户支持问题，但是在QA领域并没有一个合适的标准来衡量模型的性能。&lt;/p&gt;
&lt;p&gt;对于检索式chatbot来说，它的回复
        
      
    
    </summary>
    
      <category term="Evaluation metrics" scheme="https://daffodilflower.github.io/categories/Evaluation-metrics/"/>
    
    
      <category term="QA" scheme="https://daffodilflower.github.io/tags/QA/"/>
    
      <category term="Evaluation metrics" scheme="https://daffodilflower.github.io/tags/Evaluation-metrics/"/>
    
      <category term="chatbot" scheme="https://daffodilflower.github.io/tags/chatbot/"/>
    
  </entry>
  
  <entry>
    <title>Word文件转换为HTML</title>
    <link href="https://daffodilflower.github.io/word2html/"/>
    <id>https://daffodilflower.github.io/word2html/</id>
    <published>2020-02-06T03:37:50.000Z</published>
    <updated>2020-02-06T04:09:32.872Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在构建知识图谱的过程中，word文件都是很常见的业务数据的保存形式。Word中的文本、表格可能包含重要的&lt;strong&gt;知识&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;而自然语言处理工具无法解析word中的数据，因此需要把word文件转换为文本文件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;
        
      
    
    </summary>
    
      <category term="Python" scheme="https://daffodilflower.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://daffodilflower.github.io/tags/Python/"/>
    
      <category term="mammoth" scheme="https://daffodilflower.github.io/tags/mammoth/"/>
    
      <category term="知识图谱" scheme="https://daffodilflower.github.io/tags/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
</feed>
